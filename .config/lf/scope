#!/bin/sh

# File preview handler for lf.

set -C -f
IFS="$(printf '%b_' '\n')"
IFS="${IFS%_}"

image() {
    if [ -f "$1" ] && [ -n "$DISPLAY" ] && [ -z "$WAYLAND_DISPLAY" ] && command -V ueberzug >/dev/null 2>&1; then
        printf '{"action": "add", "identifier": "PREVIEW", "x": "%s", "y": "%s", "width": "%s", "height": "%s", "scaler": "contain", "path": "%s"}\n' "$4" "$5" "$(($2 - 1))" "$(($3 - 1))" "$1" >"$FIFO_UEBERZUG"
    else
        mediainfo "$6"
    fi
}

# Note that the cache file name is a function of file information, meaning if
# an image appears in multiple places across the machine, it will not have to
# be regenerated once seen.

case "$(file --dereference --brief --mime-type -- "$1")" in
image/*)
    image "$1" "$2" "$3" "$4" "$5" "$1"
    ;;
text/html)
    lynx -width="$4" -display_charset=utf-8 -dump "$1"
    ;;
text/troff)
    man ./ "$1" | col -b
    ;;
text/* | */xml | application/json | application/x-ndjson)
    bat --theme base16 --terminal-width "$(($4 - 2))" -f "$1"
    ;;
audio/* | application/octet-stream)
    mediainfo "$1" || exit 1
    ;;
video/*)
    CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
    [ ! -f "$CACHE" ] && ffmpegthumbnailer -i "$1" -o "$CACHE" -s 0
    image "$CACHE" "$2" "$3" "$4" "$5" "$1"
    ;;
*/pdf)
    CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
    [ ! -f "$CACHE.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
    image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
    ;;
*/epub+zip | */mobi*)
    CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
    [ ! -f "$CACHE.jpg" ] && gnome-epub-thumbnailer "$1" "$CACHE.jpg"
    image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
    ;;
application/*zip)
    case "$1" in
    *.cbz|*.cbr)
        CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE.jpg" ] && unzip -Z1 "$1" | \grep -iE '\.(jpe?g|png)$' | head -n1 | xargs -r unzip -p "$1" > "$CACHE.jpg"
        [ -f "$CACHE.jpg" ] && image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
        ;;
    *)
        atool --list -- "$1"
        ;;
    esac
    ;;
application/x-rar|application/vnd.rar)
    case "$1" in
    *.cbr)
        CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE.jpg" ] && unrar lb "$1" | \grep -iE '\.(jpe?g|png)$' | sort -V | head -n1 | xargs -r -I{} unrar p -inul "$1" "{}" > "$CACHE.jpg"
        [ -f "$CACHE.jpg" ] && image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
        ;;
    *)
        atool --list -- "$1"
        ;;
    esac
    ;;
*opendocument*)
    odt2txt "$1"
    ;;
application/pgp-encrypted)
    gpg -d -- "$1"
    ;;
application/msword)
    catdoc "$1"
    ;;
application/vnd.openxmlformats-officedocument.wordprocessingml.document)
    docx2txt "$1"
    ;;
application/vnd.openxmlformats-officedocument.spreadsheetml.sheet)
    ssconvert --export-type=Gnumeric_stf:stf_csv "$1" "fd://0" | bat --language=csv --theme base16
    ;;
application/x-iso9660-image)
    iso-info --no-header -l "$1"
    ;;
esac
exit 1
